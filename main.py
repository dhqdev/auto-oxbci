# main.py
# Orquestrador principal da automa√ß√£o completa Servopa + Todoist

import time
import sys
from login_servopa import login_servopa, navigate_to_consorcio_selection_and_fill
from login_todoist import login_todoist_and_extract_number

def main():
    """
    Executa o fluxo completo de automa√ß√£o:
    1. Login no Servopa
    2. Login no Todoist (nova aba) e extra√ß√£o do n√∫mero
    3. Retorno ao Servopa para preenchimento do cons√≥rcio
    """
    print("=" * 60)
    print("üöÄ INICIANDO AUTOMA√á√ÉO COMPLETA SERVOPA + TODOIST")
    print("=" * 60)
    
    driver = None
    
    try:
        # ETAPA 1: Login no Servopa
        print("\nüìã ETAPA 1: Fazendo login no Servopa...")
        driver = login_servopa(return_driver=True)
        
        if not driver:
            print("‚ùå ERRO: Falha no login do Servopa. Abortando automa√ß√£o.")
            return False
        
        print("‚úÖ Login no Servopa realizado com sucesso!")
        
        # ETAPA 2: Login no Todoist e extra√ß√£o do n√∫mero
        print("\nüìã ETAPA 2: Abrindo Todoist em nova aba e extraindo n√∫mero...")
        extracted_number = login_todoist_and_extract_number(driver)
        
        if not extracted_number:
            print("‚ùå ERRO: Falha ao extrair o n√∫mero do Todoist. Abortando automa√ß√£o.")
            return False
        
        print(f"‚úÖ N√∫mero extra√≠do com sucesso do Todoist: {extracted_number}")
        
        # ETAPA 3: Retorno ao Servopa para preenchimento
        print(f"\nüìã ETAPA 3: Preenchendo cons√≥rcio no Servopa com o n√∫mero {extracted_number}...")
        success = navigate_to_consorcio_selection_and_fill(driver, extracted_number)
        
        if not success:
            print("‚ùå ERRO: Falha ao preencher o cons√≥rcio no Servopa.")
            return False
        
        print("‚úÖ Cons√≥rcio preenchido com sucesso!")
        
        # FINALIZA√á√ÉO
        print("\nüéâ AUTOMA√á√ÉO COMPLETA FINALIZADA COM SUCESSO!")
        print(f"   ‚û§ N√∫mero extra√≠do do Todoist: {extracted_number}")
        print(f"   ‚û§ Cons√≥rcio preenchido no Servopa")
        print("   ‚û§ Screenshots salvas para verifica√ß√£o")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ERRO INESPERADO na automa√ß√£o: {e}")
        return False
    
    finally:
        if driver:
            print("\n‚è≥ Mantendo navegador aberto para verifica√ß√£o...")
            print("   (Pressione Enter para fechar o navegador)")
            input()
            driver.quit()
            print("üîí Navegador fechado.")

def test_individual_components():
    """
    Testa cada componente individualmente para debug
    """
    print("=" * 50)
    print("üîß MODO DE TESTE - COMPONENTES INDIVIDUAIS")
    print("=" * 50)
    
    while True:
        print("\nEscolha o teste:")
        print("1. Testar apenas login Servopa")
        print("2. Testar apenas login Todoist")
        print("3. Testar automa√ß√£o completa")
        print("4. Sair")
        
        choice = input("\nOp√ß√£o (1-4): ").strip()
        
        if choice == "1":
            print("\nüß™ Testando login Servopa...")
            driver = login_servopa(return_driver=True)
            if driver:
                print("‚úÖ Login Servopa: SUCESSO")
                input("Pressione Enter para fechar...")
                driver.quit()
            else:
                print("‚ùå Login Servopa: FALHA")
                
        elif choice == "2":
            print("\nüß™ Testando login Todoist...")
            from login_todoist import test_todoist_login
            result = test_todoist_login()
            if result:
                print(f"‚úÖ Login Todoist: SUCESSO - N√∫mero: {result}")
            else:
                print("‚ùå Login Todoist: FALHA")
                
        elif choice == "3":
            print("\nüß™ Testando automa√ß√£o completa...")
            success = main()
            if success:
                print("‚úÖ Automa√ß√£o completa: SUCESSO")
            else:
                print("‚ùå Automa√ß√£o completa: FALHA")
                
        elif choice == "4":
            print("üëã Saindo...")
            break
            
        else:
            print("‚ùå Op√ß√£o inv√°lida!")

if __name__ == "__main__":
    print("ü§ñ SISTEMA DE AUTOMA√á√ÉO SERVOPA + TODOIST")
    print("Desenvolvido para extrair n√∫meros do Todoist e preencher cons√≥rcios")
    print()
    
    if len(sys.argv) > 1 and sys.argv[1] == "--test":
        test_individual_components()
    else:
        print("Iniciando automa√ß√£o completa...")
        print("(Use 'python main.py --test' para modo de teste)")
        print()
        
        success = main()
        
        if success:
            print("\n‚úÖ Processo finalizado com SUCESSO!")
            sys.exit(0)
        else:
            print("\n‚ùå Processo finalizado com ERRO!")
            sys.exit(1)