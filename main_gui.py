# main_gui.py
# Arquivo principal com interface gr√°fica

"""
ü§ñ Sistema de Automa√ß√£o Servopa + Todoist
===========================================

Sistema completo de automa√ß√£o com interface gr√°fica moderna.

Funcionalidades:
- ‚úÖ Login autom√°tico no Servopa 
- ‚úÖ Login autom√°tico no Todoist
- ‚úÖ Extra√ß√£o de n√∫mero de tarefa
- ‚úÖ Busca e sele√ß√£o de clientes
- ‚úÖ Navega√ß√£o para p√°gina de lances
- ‚úÖ Interface visual em tempo real
- ‚úÖ Logs detalhados e screenshots

Uso:
    python main_gui.py

Requisitos:
    pip install selenium webdriver-manager

Desenvolvido para integra√ß√£o Servopa + Todoist
"""

import sys
import os
import tkinter as tk
from tkinter import messagebox

def main():
    """Fun√ß√£o principal que inicia a interface gr√°fica"""
    try:
        # Adiciona o diret√≥rio atual ao path
        current_dir = os.path.dirname(os.path.abspath(__file__))
        sys.path.insert(0, current_dir)
        
        # Verifica depend√™ncias
        try:
            import selenium
            from webdriver_manager.chrome import ChromeDriverManager
        except ImportError as e:
            error_msg = f"""
‚ùå Depend√™ncias n√£o encontradas!

Erro: {e}

Para instalar as depend√™ncias necess√°rias, execute:
pip install -r requirements.txt

Depend√™ncias necess√°rias:
- selenium >= 4.15.0
- webdriver-manager >= 4.0.1
            """
            
            if 'tkinter' in sys.modules:
                messagebox.showerror("Erro de Depend√™ncias", error_msg)
            else:
                print(error_msg)
            return False
        
        # Importa e inicia a interface
        from ui.automation_gui import AutomationGUI
        
        print("ü§ñ Iniciando Sistema de Automa√ß√£o Servopa + Todoist")
        print("üì± Carregando interface gr√°fica...")
        
        # Cria e executa a aplica√ß√£o
        app = AutomationGUI()
        app.run()
        
        return True
        
    except ImportError as e:
        error_msg = f"""
‚ùå Erro ao importar m√≥dulos!

Erro: {e}

Verifique se todos os arquivos est√£o na estrutura correta:
/auth/
  - servopa_auth.py
  - todoist_auth.py
  - __init__.py
/automation/
  - servopa_automation.py
  - __init__.py
/ui/
  - automation_gui.py
  - __init__.py
        """
        print(error_msg)
        return False
        
    except Exception as e:
        error_msg = f"‚ùå Erro inesperado: {e}"
        print(error_msg)
        
        if 'tkinter' in sys.modules:
            messagebox.showerror("Erro", error_msg)
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("ü§ñ SISTEMA DE AUTOMA√á√ÉO SERVOPA + TODOIST")
    print("=" * 60)
    print()
    print("üìã Funcionalidades:")
    print("   ‚Ä¢ Login autom√°tico no Servopa")
    print("   ‚Ä¢ Extra√ß√£o de dados do Todoist")  
    print("   ‚Ä¢ Busca e sele√ß√£o de clientes")
    print("   ‚Ä¢ Navega√ß√£o para p√°gina de lances")
    print("   ‚Ä¢ Interface visual moderna")
    print("   ‚Ä¢ Logs em tempo real")
    print()
    print("üöÄ Iniciando aplica√ß√£o...")
    print()
    
    success = main()
    
    if success:
        print("‚úÖ Aplica√ß√£o finalizada com sucesso!")
    else:
        print("‚ùå Aplica√ß√£o finalizada com erro!")
        sys.exit(1)